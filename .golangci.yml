run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - build
    - _output
  skip-files:
    - "zz_generated\\..*\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: false
  
  goconst:
    min-len: 3
    min-occurrences: 3
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - unnecessaryBlock
      - whyNoLint
  
  gocyclo:
    min-complexity: 15
  
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: github.com/crossplane-contrib/provider-gitea
  
  golint:
    min-confidence: 0.8
  
  govet:
    check-shadowing: true
    enable-all: true
    disable:
      - fieldalignment
  
  lll:
    line-length: 120
  
  maligned:
    suggest-new: true
  
  misspell:
    locale: US
    ignore-words:
      - crossplane
      - gitea
  
  nakedret:
    max-func-lines: 30
  
  prealloc:
    simple: true
    range-loops: true
    for-loops: false
  
  unparam:
    check-exported: false
  
  unused:
    check-exported: false
  
  whitespace:
    multi-if: false
    multi-func: false

linters:
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - golint
    - gomnd
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - lll
    - makezero
    - maligned
    - misspell
    - nakedret
    - nestif
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - structcheck
    - stylecheck
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - wastedassign
    - whitespace

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
    
    # Exclude generated files
    - path: zz_generated\..*\.go
      linters:
        - golint
        - stylecheck
        - revive
    
    # Exclude some false positives for controller-runtime
    - text: "should not use dot imports"
      linters:
        - revive
      path: internal/controller/
    
    # Allow long lines in generated code
    - path: zz_generated\..*\.go
      linters:
        - lll
    
    # Allow deep nesting in controllers (common pattern)
    - path: internal/controller/
      linters:
        - nestif
        - gocyclo
      text: "cognitive complexity|cyclomatic complexity"

  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    
    # golint: False positive when used with //nolint
    - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this
    
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    
    # gosec: Too many false-positives on 'unsafe' usage
    - Use of unsafe calls should be audited
    
    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)
    
    # gosec: Duplicated errcheck checks
    - G104
    
    # gosec: Too many issues in popular repos
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
    
    # gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - Potential file inclusion via variable

  max-issues-per-linter: 0
  max-same-issues: 0
  new: false